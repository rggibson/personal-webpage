<?xml version="1.0" encoding="UTF-8"?>

<Other>

<Interest>
<ID>pokerconsulting</ID>
<Title>Poker AI Consulting</Title>
<Image>poker-room.png</Image>
<Details><![CDATA[
<p>
As of January 2014, I have been working as a poker AI specialist for a small group of poker professionals who hope to use the AI I build to improve their own play. 
The project is confidential, so I cannot talk about the specifics of my current work. 
Instead, I can discuss a few of the things I have done with poker AI in the past during my Ph.D. and how that may be of interest to professional poker players.
</p>
<p>
As a member of the <a href="http://webdocs.cs.ualberta.ca/~games/poker/">Computer Poker Research Group (CPRG)</a> at the University of Alberta, a major focus of our work involved building poker AI programs (or "bots" or "agents") that approximate game-theoretic optimal poker. 
For heads-up poker games, if a player follows a game-theoretic optimal strategy, this means that the player is guaranteed to do no worse than break even against an opponent in the long run, regardless of how the opponent plays. 
In practice, we see that game-theoretic optimal play often wins a significant amount of money against a sub-optimal opponent. 
Therefore, a high stakes poker player may wish to better understand optimal play to improve their winnings. 
Our algorithms developed in the CPRG are mathematically proven to converge to an optimal strategy in the game being modelled by the program. 
<a href="https://github.com/rggibson/open-pure-cfr">Open Pure CFR</a> is one such algorithm that I have implemented and is freely available through GitHub.
</p>
<p>
Developing game-theoretical optimal poker AI leads to other exciting analyses, including:
<ul>
<li>post-play dissection of hands to help remove luck and get a better estimate of how much money the player should have expected to win or lose,</li>
<li>comparison between sets of bet sizes in no-limit games to see which best exploits a player with certain betting tendencies, and</li>
<li>calculations of optimal play statistics, including hand ranges and overall calling percentages after any sequence of betting.</li>
</ul>
</p>
]]></Details>
</Interest>

<Interest>
<ID>pbtracker</ID>
<Title>PB Tracker</Title>
<Image>pbtracker-rggibson-100913.png</Image>
<Details><![CDATA[
<p>
<a href="http://www.pbtracker.net">PB Tracker</a> is a web app for tracking <a href="/personal#vids">speedrunning</a> times, personal bests (PBs) and viewing other runners' PBs. 
Runners sign up and submit their times to populate their very own personal runner page. 
This runner page is the main feature of PB Tracker, providing a useful reference point for looking up a runner's best times. 
In addition, PB Tracker includes individual game pages that list all the submitted times for the corresponding game, sorted by time. 
These game pages allow runners to compare their own times with other PB Trackers, as well as keep track of the best known time for a given game and category. 
</p>
<p>
This hobby project began as an improvement over my old method of tracking and posting my own PBs through spreadsheets and HTML-generating scripts. 
I quickly realized that it would not be too difficult to release PB Tracker out to the public so that others may make use of these tools as well. 
On the tech side of things, the app is written in Python and deployed on <a href="https://developers.google.com/appengine/">Google App Engine</a>. 
I am making use of a lot of other web projects, including <a href="http://getbootstrap.com/">Twitter Bootstrap</a>, <a href="http://bootswatch.com/">Bootswatch</a>, <a href="https://gravatar.com/">Gravatar</a> and <a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a>. 
The project is open-sourced through <a href="https://github.com/rggibson/pb-tracker">GitHub</a> and now mostly runs as-is as I don't have much time to work on it these days.
</p>
]]></Details>
</Interest>

</Other>
