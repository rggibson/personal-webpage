<?xml version="1.0" encoding="UTF-8"?>

<Projects>

<Project>
<ID>super-mega-baseball</ID>
<Title>Super Mega Baseball</Title>
<Youtube_ID>WTRY-SP2EuI</Youtube_ID>
<Details><![CDATA[
<p>
Super Mega Baseball (SMB) is a series of baseball video games developed by <a href="http://metalheadsoftware.com">Metalhead Software</a>, a local development company here in Victoria.
The original Super Mega Baseball was named <a href="https://www.polygon.com/2014/12/17/7408391/2014-in-review-sports-game-of-the-year"> Sports Game of the Year</a> by Polygon after its release.
I joined the team part way through development of Super Mega Baseball 2, and took on the lead gameplay developer role for Super Mega Baseball 3.
SMB features made-up players and teams with memorable names, such as Hammer Longballo of the Sirloins and Juice Jackson of the Jacks.
The series is very accessible, yet packs a deep baseball simulation that is tons of fun to play.
</p>
<p>
While I had no part in development of the original Super Mega Baseball, I was a big fan of the game.
At one point, I was pretty good at it and managed to pitch a perfect game on a very high difficulty setting.
This actually caught the attention of Polygon as well, who wrote an article describing this feat as <a href="https://www.polygon.com/2015/2/7/7996237/super-mega-baseball-perfect-game">"the hardest thing you can do in any current sports video game"</a>.
I don't think this helped me score my job with Metalhead, but it is certainly fun to work on a project that scratches my own itch.
</p>
]]></Details>
</Project>

<Project>
<ID>fanteamsy</ID>
<Title>Wins League Fantasy</Title>
<Image>wlfantasy.png</Image>
<Details><![CDATA[
<p><a href="https://winsleaguefantasy.com">Wins League Fantasy</a> is the season-long fantasy game designed for people like me who love sports, love the idea of playing fantasy sports, but also love having their free time too.
Wins League Fantasy is a cross between wins pools and fantasy sports for you and your friends that brings the excitement of drafting and following your picks without the homework.
Unlike fantasy sports where you draft players by position, in Wins League Fantasy, you draft teams by division.
When your teams win, you score points, making for a better cheering experience.
Take your wins pool to the next level with Wins League Fantasy and get the best out of both fantasy sports and pick'em contests in one pool.
</p>
<p>I played fantasy sports for several years, participating in multiple leagues across multiple sports.
Once I had kids, I found that I lost a lot of my free time and struggled to keep up with everything I needed to know to keep my fantasy teams afloat.
Eventually, I quit playing fantasy sports all together.
Wins League Fantasy is a passion project that brings back the enjoyment I got out of playing fantasy sports, but without that high time investment that fantasy sports suffers from.
It also brings the benefits of wins pools, like better cheering and simplified scoring, to a fantasy-type game, which I have really enjoyed.</p>
]]></Details>
</Project>

<Project>
<ID>poker</ID>
<Title>Poker AI</Title>
<Youtube_ID>ScXX2bndGJc</Youtube_ID>
<Details><![CDATA[
<p>
I am a former member of the <a href="http://poker.cs.ualberta.ca">Computer Poker Research Group (CPRG)</a> at the University of Alberta.
Unlike chess, poker involves stochastic events through random card deals, varying degrees of outcomes from different pot sizes, and imperfect information resulting from private hole cards.
These complications make poker a more challening game for computers to play than other traditional games like checkers or chess.
</p>
<p>
As a member of the CPRG, a major focus of our work involved building poker AI programs (or "bots" or "agents") that approximate game-theoretic optimal poker.
For heads-up poker games, if a player follows a game-theoretic optimal strategy, this means that the player is guaranteed to do no worse than break even against an opponent in the long run, regardless of how the opponent plays.
In practice, we see that game-theoretic optimal play often wins a significant amount of money against a sub-optimal opponent.
Therefore, a high stakes poker player may wish to better understand optimal play to improve their winnings.
Our algorithms developed in the CPRG are mathematically proven to converge to an optimal strategy in the game being modelled by the program.
<a href="https://github.com/rggibson/open-pure-cfr">Open Pure CFR</a> is one such algorithm that I have implemented and is freely available through GitHub.
</p>
<p>
Developing game-theoretical optimal poker AI leads to other exciting analyses, including:
<ul>
<li>post-play dissection of hands to help remove luck and get a better estimate of how much money the player should have expected to win or lose,</li>
<li>comparison between sets of bet sizes in no-limit games to see which best exploits a player with certain betting tendencies, and</li>
<li>calculations of optimal play statistics, including hand ranges and overall calling percentages after any sequence of betting.</li>
</ul>
</p>
]]></Details>
</Project>

<Project>
<ID>scheduling</ID>
<Title>Automated Sports Scheduling for Video Games</Title>
<Image>sports-schedule.png</Image>
<Details><![CDATA[
<p>I briefly worked on a solo project that considered the problem of generating schedules for a sports league, particularly for sports video games.
Real world professional sports schedules often take months of computation to generate, and thus many sports games only contain a small number of hard-coded league schedules for the games' season modes.
In this project, I looked at relaxing the constraints required for real-world professional leagues in order to efficiently generate random sports schedules of user-defined size.
My preliminary results indicate that dynamic, efficient scheduling is possible using <a href="http://en.wikipedia.org/wiki/Answer_set_programming">answer set programming</a> and could be implemented in modern video games.</p>
<p>More recently, I wrote <a href="https://github.com/rggibson/sports-scheduling">a C++ library for efficiently generating balanced home/away sports schedules</a> that could potentially be used in a sports video game or other related project.
It is open-sourced and MIT-licensed, so it is free to use and be modified by anyone.</p>
]]></Details>
</Project>

<Project>
<ID>pbtracker</ID>
<Title>PB Tracker</Title>
<Image>pbtracker-rggibson-100913.png</Image>
<Details><![CDATA[
<p>
<a href="https://github.com/rggibson/pb-tracker">PB Tracker</a> is a web app for tracking <a href="/personal#vids">speedrunning</a> times, personal bests (PBs) and viewing other runners' PBs.
Runners sign up and submit their times to populate their very own personal runner page.
This runner page is the main feature of PB Tracker, providing a useful reference point for looking up a runner's best times.
In addition, PB Tracker includes individual game pages that list all the submitted times for the corresponding game, sorted by time.
These game pages allow runners to compare their own times with other PB Trackers, as well as keep track of the best known time for a given game and category.
</p>
<p>
This hobby project began as an improvement over my old method of tracking and posting my own PBs through spreadsheets and HTML-generating scripts.
I quickly realized that it would not be too difficult to release PB Tracker out to the public so that others may make use of these tools as well.
On the tech side of things, the app is written in Python and deployed on <a href="https://developers.google.com/appengine/">Google App Engine</a>.
I am making use of a lot of other web projects, including <a href="http://getbootstrap.com/">Twitter Bootstrap</a>, <a href="http://bootswatch.com/">Bootswatch</a>, <a href="https://gravatar.com/">Gravatar</a> and <a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a>.
The project is open-sourced through <a href="https://github.com/rggibson/pb-tracker">GitHub</a> and now mostly runs as-is as I don't have much time to work on it these days.
</p>
]]></Details>
</Project>

<Project>
<ID>risk</ID>
<Title>AI for the Board Game RISK</Title>
<Image>risk.png</Image>
<Details><![CDATA[
<p>As part of a Ph.D. course project with a team of 2 other students, I wrote a computer program that played the board game RISK.
Given a short time frame to complete the project, we focused just on one aspect of the game, namely the opening <i>draft</i> of territories.
In this opening phase of the game, players alternate selecting starting territories on the board until all territories are occupied by some player.
This mechanism resembles a rookie player draft in many professional sports leagues and this relationship was actually my main motivation for working on this project.
Our program won significantly more matches than the agents supplied with <a href="http://sillysoft.net/lux/">Lux Delux</a>, a computer version of RISK.
We later published our work and I presented the paper at Stanford during an AI conference.</p>
]]></Details>
</Project>

<Project>
<ID>mario</ID>
<Title>A Learning AI for Super Mario Bros.</Title>
<Youtube_ID>EZLkCdMXw8g</Youtube_ID>
<Details><![CDATA[
<p>As part of a team of 2 students, I developed an automated agent that plays randomly generated levels of <a href="https://mojang.com/notch/mario/">Infinite Super Mario Bros</a>.
In this version, the level environments were also randomly generated, changing things such as Mario's jump height, speed, and even his objectives (whether to collect coins, kill enemies, complete levels, etc.).
Thus, the goal of this project was to create a Mario agent that could successfully learn and adapt to changes in the environment.
We submitted our agent to the Mario event of the 2009 Reinforcement Learning Competition where our agent earned second place.
An early version of this agent is seen in the video above.</p>
]]></Details>
</Project>

<Project>
<ID>baseball</ID>
<Title>Baseball Card Game</Title>
<Image>baseball.png</Image>
<Details><![CDATA[
In 2006, a group of friends and I created a baseball card game.
Since then, I have modified the game a bit and written up a sheet of rules.
The game is for 2 players and can be played with a regular deck of playing cards.
I have heard of a few other baseball card games that are based on poker hands, but this game is completely different and no poker knowlege is required.
I think the game is pretty fun, and so I have decided to share the game with the internet.
The 2-page rules and 1-page outcome tables can be found <a href="static/baseball-card-game.pdf">here</a>.
The rules are a bit dense, so feel free to <a href="mailto:richard.g.gibson@gmail.com">email me</a> with any questions you may have.
In addition, the outcome tables can be a bit cumbersome to carry around, so I suggest downloading the rules to your smartphone.
]]></Details>
</Project>

</Projects>
